// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: operator.proto

package com.github.edarke.mongodb.driver;

/**
 * Protobuf type {@code com.github.edarke.mongodb.Text}
 */
public final class Text extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.github.edarke.mongodb.Text)
    TextOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Text.newBuilder() to construct.
  private Text(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Text() {
    query_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    path_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Text();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.edarke.mongodb.driver.Operator.internal_static_com_github_edarke_mongodb_Text_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.edarke.mongodb.driver.Operator.internal_static_com_github_edarke_mongodb_Text_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.edarke.mongodb.driver.Text.class, com.github.edarke.mongodb.driver.Text.Builder.class);
  }

  private int bitField0_;
  public static final int QUERY_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList query_;
  /**
   * <code>repeated string query = 1;</code>
   * @return A list containing the query.
   */
  public com.google.protobuf.ProtocolStringList
      getQueryList() {
    return query_;
  }
  /**
   * <code>repeated string query = 1;</code>
   * @return The count of query.
   */
  public int getQueryCount() {
    return query_.size();
  }
  /**
   * <code>repeated string query = 1;</code>
   * @param index The index of the element to return.
   * @return The query at the given index.
   */
  public java.lang.String getQuery(int index) {
    return query_.get(index);
  }
  /**
   * <code>repeated string query = 1;</code>
   * @param index The index of the value to return.
   * @return The bytes of the query at the given index.
   */
  public com.google.protobuf.ByteString
      getQueryBytes(int index) {
    return query_.getByteString(index);
  }

  public static final int PATH_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.github.edarke.mongodb.driver.FieldPath> path_;
  /**
   * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.github.edarke.mongodb.driver.FieldPath> getPathList() {
    return path_;
  }
  /**
   * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.github.edarke.mongodb.driver.FieldPathOrBuilder> 
      getPathOrBuilderList() {
    return path_;
  }
  /**
   * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
   */
  @java.lang.Override
  public int getPathCount() {
    return path_.size();
  }
  /**
   * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
   */
  @java.lang.Override
  public com.github.edarke.mongodb.driver.FieldPath getPath(int index) {
    return path_.get(index);
  }
  /**
   * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
   */
  @java.lang.Override
  public com.github.edarke.mongodb.driver.FieldPathOrBuilder getPathOrBuilder(
      int index) {
    return path_.get(index);
  }

  public static final int FUZZY_FIELD_NUMBER = 3;
  private com.github.edarke.mongodb.driver.FuzzyOption fuzzy_;
  /**
   * <code>optional .com.github.edarke.mongodb.FuzzyOption fuzzy = 3;</code>
   * @return Whether the fuzzy field is set.
   */
  @java.lang.Override
  public boolean hasFuzzy() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional .com.github.edarke.mongodb.FuzzyOption fuzzy = 3;</code>
   * @return The fuzzy.
   */
  @java.lang.Override
  public com.github.edarke.mongodb.driver.FuzzyOption getFuzzy() {
    return fuzzy_ == null ? com.github.edarke.mongodb.driver.FuzzyOption.getDefaultInstance() : fuzzy_;
  }
  /**
   * <code>optional .com.github.edarke.mongodb.FuzzyOption fuzzy = 3;</code>
   */
  @java.lang.Override
  public com.github.edarke.mongodb.driver.FuzzyOptionOrBuilder getFuzzyOrBuilder() {
    return fuzzy_ == null ? com.github.edarke.mongodb.driver.FuzzyOption.getDefaultInstance() : fuzzy_;
  }

  public static final int SCORE_FIELD_NUMBER = 4;
  private com.github.edarke.mongodb.driver.Score score_;
  /**
   * <code>optional .com.github.edarke.mongodb.Score score = 4;</code>
   * @return Whether the score field is set.
   */
  @java.lang.Override
  public boolean hasScore() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional .com.github.edarke.mongodb.Score score = 4;</code>
   * @return The score.
   */
  @java.lang.Override
  public com.github.edarke.mongodb.driver.Score getScore() {
    return score_ == null ? com.github.edarke.mongodb.driver.Score.getDefaultInstance() : score_;
  }
  /**
   * <code>optional .com.github.edarke.mongodb.Score score = 4;</code>
   */
  @java.lang.Override
  public com.github.edarke.mongodb.driver.ScoreOrBuilder getScoreOrBuilder() {
    return score_ == null ? com.github.edarke.mongodb.driver.Score.getDefaultInstance() : score_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    for (int i = 0; i < getPathCount(); i++) {
      if (!getPath(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasScore()) {
      if (!getScore().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < query_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, query_.getRaw(i));
    }
    for (int i = 0; i < path_.size(); i++) {
      output.writeMessage(2, path_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(3, getFuzzy());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(4, getScore());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < query_.size(); i++) {
        dataSize += computeStringSizeNoTag(query_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getQueryList().size();
    }
    for (int i = 0; i < path_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, path_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getFuzzy());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getScore());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.edarke.mongodb.driver.Text)) {
      return super.equals(obj);
    }
    com.github.edarke.mongodb.driver.Text other = (com.github.edarke.mongodb.driver.Text) obj;

    if (!getQueryList()
        .equals(other.getQueryList())) return false;
    if (!getPathList()
        .equals(other.getPathList())) return false;
    if (hasFuzzy() != other.hasFuzzy()) return false;
    if (hasFuzzy()) {
      if (!getFuzzy()
          .equals(other.getFuzzy())) return false;
    }
    if (hasScore() != other.hasScore()) return false;
    if (hasScore()) {
      if (!getScore()
          .equals(other.getScore())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getQueryCount() > 0) {
      hash = (37 * hash) + QUERY_FIELD_NUMBER;
      hash = (53 * hash) + getQueryList().hashCode();
    }
    if (getPathCount() > 0) {
      hash = (37 * hash) + PATH_FIELD_NUMBER;
      hash = (53 * hash) + getPathList().hashCode();
    }
    if (hasFuzzy()) {
      hash = (37 * hash) + FUZZY_FIELD_NUMBER;
      hash = (53 * hash) + getFuzzy().hashCode();
    }
    if (hasScore()) {
      hash = (37 * hash) + SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getScore().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.edarke.mongodb.driver.Text parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.edarke.mongodb.driver.Text parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.edarke.mongodb.driver.Text parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.edarke.mongodb.driver.Text parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.edarke.mongodb.driver.Text parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.edarke.mongodb.driver.Text parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.edarke.mongodb.driver.Text parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.edarke.mongodb.driver.Text parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.edarke.mongodb.driver.Text parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.github.edarke.mongodb.driver.Text parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.edarke.mongodb.driver.Text parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.edarke.mongodb.driver.Text parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.edarke.mongodb.driver.Text prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.github.edarke.mongodb.Text}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.github.edarke.mongodb.Text)
      com.github.edarke.mongodb.driver.TextOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.edarke.mongodb.driver.Operator.internal_static_com_github_edarke_mongodb_Text_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.edarke.mongodb.driver.Operator.internal_static_com_github_edarke_mongodb_Text_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.edarke.mongodb.driver.Text.class, com.github.edarke.mongodb.driver.Text.Builder.class);
    }

    // Construct using com.github.edarke.mongodb.driver.Text.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getPathFieldBuilder();
        getFuzzyFieldBuilder();
        getScoreFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      query_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      if (pathBuilder_ == null) {
        path_ = java.util.Collections.emptyList();
      } else {
        path_ = null;
        pathBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      fuzzy_ = null;
      if (fuzzyBuilder_ != null) {
        fuzzyBuilder_.dispose();
        fuzzyBuilder_ = null;
      }
      score_ = null;
      if (scoreBuilder_ != null) {
        scoreBuilder_.dispose();
        scoreBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.edarke.mongodb.driver.Operator.internal_static_com_github_edarke_mongodb_Text_descriptor;
    }

    @java.lang.Override
    public com.github.edarke.mongodb.driver.Text getDefaultInstanceForType() {
      return com.github.edarke.mongodb.driver.Text.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.edarke.mongodb.driver.Text build() {
      com.github.edarke.mongodb.driver.Text result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.edarke.mongodb.driver.Text buildPartial() {
      com.github.edarke.mongodb.driver.Text result = new com.github.edarke.mongodb.driver.Text(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.github.edarke.mongodb.driver.Text result) {
      if (((bitField0_ & 0x00000001) != 0)) {
        query_ = query_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.query_ = query_;
      if (pathBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          path_ = java.util.Collections.unmodifiableList(path_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.path_ = path_;
      } else {
        result.path_ = pathBuilder_.build();
      }
    }

    private void buildPartial0(com.github.edarke.mongodb.driver.Text result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.fuzzy_ = fuzzyBuilder_ == null
            ? fuzzy_
            : fuzzyBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.score_ = scoreBuilder_ == null
            ? score_
            : scoreBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.edarke.mongodb.driver.Text) {
        return mergeFrom((com.github.edarke.mongodb.driver.Text)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.edarke.mongodb.driver.Text other) {
      if (other == com.github.edarke.mongodb.driver.Text.getDefaultInstance()) return this;
      if (!other.query_.isEmpty()) {
        if (query_.isEmpty()) {
          query_ = other.query_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureQueryIsMutable();
          query_.addAll(other.query_);
        }
        onChanged();
      }
      if (pathBuilder_ == null) {
        if (!other.path_.isEmpty()) {
          if (path_.isEmpty()) {
            path_ = other.path_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePathIsMutable();
            path_.addAll(other.path_);
          }
          onChanged();
        }
      } else {
        if (!other.path_.isEmpty()) {
          if (pathBuilder_.isEmpty()) {
            pathBuilder_.dispose();
            pathBuilder_ = null;
            path_ = other.path_;
            bitField0_ = (bitField0_ & ~0x00000002);
            pathBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPathFieldBuilder() : null;
          } else {
            pathBuilder_.addAllMessages(other.path_);
          }
        }
      }
      if (other.hasFuzzy()) {
        mergeFuzzy(other.getFuzzy());
      }
      if (other.hasScore()) {
        mergeScore(other.getScore());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      for (int i = 0; i < getPathCount(); i++) {
        if (!getPath(i).isInitialized()) {
          return false;
        }
      }
      if (hasScore()) {
        if (!getScore().isInitialized()) {
          return false;
        }
      }
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              ensureQueryIsMutable();
              query_.add(bs);
              break;
            } // case 10
            case 18: {
              com.github.edarke.mongodb.driver.FieldPath m =
                  input.readMessage(
                      com.github.edarke.mongodb.driver.FieldPath.PARSER,
                      extensionRegistry);
              if (pathBuilder_ == null) {
                ensurePathIsMutable();
                path_.add(m);
              } else {
                pathBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getFuzzyFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getScoreFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.LazyStringList query_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureQueryIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        query_ = new com.google.protobuf.LazyStringArrayList(query_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <code>repeated string query = 1;</code>
     * @return A list containing the query.
     */
    public com.google.protobuf.ProtocolStringList
        getQueryList() {
      return query_.getUnmodifiableView();
    }
    /**
     * <code>repeated string query = 1;</code>
     * @return The count of query.
     */
    public int getQueryCount() {
      return query_.size();
    }
    /**
     * <code>repeated string query = 1;</code>
     * @param index The index of the element to return.
     * @return The query at the given index.
     */
    public java.lang.String getQuery(int index) {
      return query_.get(index);
    }
    /**
     * <code>repeated string query = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the query at the given index.
     */
    public com.google.protobuf.ByteString
        getQueryBytes(int index) {
      return query_.getByteString(index);
    }
    /**
     * <code>repeated string query = 1;</code>
     * @param index The index to set the value at.
     * @param value The query to set.
     * @return This builder for chaining.
     */
    public Builder setQuery(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureQueryIsMutable();
      query_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string query = 1;</code>
     * @param value The query to add.
     * @return This builder for chaining.
     */
    public Builder addQuery(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureQueryIsMutable();
      query_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string query = 1;</code>
     * @param values The query to add.
     * @return This builder for chaining.
     */
    public Builder addAllQuery(
        java.lang.Iterable<java.lang.String> values) {
      ensureQueryIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, query_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string query = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearQuery() {
      query_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string query = 1;</code>
     * @param value The bytes of the query to add.
     * @return This builder for chaining.
     */
    public Builder addQueryBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      ensureQueryIsMutable();
      query_.add(value);
      onChanged();
      return this;
    }

    private java.util.List<com.github.edarke.mongodb.driver.FieldPath> path_ =
      java.util.Collections.emptyList();
    private void ensurePathIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        path_ = new java.util.ArrayList<com.github.edarke.mongodb.driver.FieldPath>(path_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.edarke.mongodb.driver.FieldPath, com.github.edarke.mongodb.driver.FieldPath.Builder, com.github.edarke.mongodb.driver.FieldPathOrBuilder> pathBuilder_;

    /**
     * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
     */
    public java.util.List<com.github.edarke.mongodb.driver.FieldPath> getPathList() {
      if (pathBuilder_ == null) {
        return java.util.Collections.unmodifiableList(path_);
      } else {
        return pathBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
     */
    public int getPathCount() {
      if (pathBuilder_ == null) {
        return path_.size();
      } else {
        return pathBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
     */
    public com.github.edarke.mongodb.driver.FieldPath getPath(int index) {
      if (pathBuilder_ == null) {
        return path_.get(index);
      } else {
        return pathBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
     */
    public Builder setPath(
        int index, com.github.edarke.mongodb.driver.FieldPath value) {
      if (pathBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePathIsMutable();
        path_.set(index, value);
        onChanged();
      } else {
        pathBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
     */
    public Builder setPath(
        int index, com.github.edarke.mongodb.driver.FieldPath.Builder builderForValue) {
      if (pathBuilder_ == null) {
        ensurePathIsMutable();
        path_.set(index, builderForValue.build());
        onChanged();
      } else {
        pathBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
     */
    public Builder addPath(com.github.edarke.mongodb.driver.FieldPath value) {
      if (pathBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePathIsMutable();
        path_.add(value);
        onChanged();
      } else {
        pathBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
     */
    public Builder addPath(
        int index, com.github.edarke.mongodb.driver.FieldPath value) {
      if (pathBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePathIsMutable();
        path_.add(index, value);
        onChanged();
      } else {
        pathBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
     */
    public Builder addPath(
        com.github.edarke.mongodb.driver.FieldPath.Builder builderForValue) {
      if (pathBuilder_ == null) {
        ensurePathIsMutable();
        path_.add(builderForValue.build());
        onChanged();
      } else {
        pathBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
     */
    public Builder addPath(
        int index, com.github.edarke.mongodb.driver.FieldPath.Builder builderForValue) {
      if (pathBuilder_ == null) {
        ensurePathIsMutable();
        path_.add(index, builderForValue.build());
        onChanged();
      } else {
        pathBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
     */
    public Builder addAllPath(
        java.lang.Iterable<? extends com.github.edarke.mongodb.driver.FieldPath> values) {
      if (pathBuilder_ == null) {
        ensurePathIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, path_);
        onChanged();
      } else {
        pathBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
     */
    public Builder clearPath() {
      if (pathBuilder_ == null) {
        path_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        pathBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
     */
    public Builder removePath(int index) {
      if (pathBuilder_ == null) {
        ensurePathIsMutable();
        path_.remove(index);
        onChanged();
      } else {
        pathBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
     */
    public com.github.edarke.mongodb.driver.FieldPath.Builder getPathBuilder(
        int index) {
      return getPathFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
     */
    public com.github.edarke.mongodb.driver.FieldPathOrBuilder getPathOrBuilder(
        int index) {
      if (pathBuilder_ == null) {
        return path_.get(index);  } else {
        return pathBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
     */
    public java.util.List<? extends com.github.edarke.mongodb.driver.FieldPathOrBuilder> 
         getPathOrBuilderList() {
      if (pathBuilder_ != null) {
        return pathBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(path_);
      }
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
     */
    public com.github.edarke.mongodb.driver.FieldPath.Builder addPathBuilder() {
      return getPathFieldBuilder().addBuilder(
          com.github.edarke.mongodb.driver.FieldPath.getDefaultInstance());
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
     */
    public com.github.edarke.mongodb.driver.FieldPath.Builder addPathBuilder(
        int index) {
      return getPathFieldBuilder().addBuilder(
          index, com.github.edarke.mongodb.driver.FieldPath.getDefaultInstance());
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.FieldPath path = 2;</code>
     */
    public java.util.List<com.github.edarke.mongodb.driver.FieldPath.Builder> 
         getPathBuilderList() {
      return getPathFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.edarke.mongodb.driver.FieldPath, com.github.edarke.mongodb.driver.FieldPath.Builder, com.github.edarke.mongodb.driver.FieldPathOrBuilder> 
        getPathFieldBuilder() {
      if (pathBuilder_ == null) {
        pathBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.github.edarke.mongodb.driver.FieldPath, com.github.edarke.mongodb.driver.FieldPath.Builder, com.github.edarke.mongodb.driver.FieldPathOrBuilder>(
                path_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        path_ = null;
      }
      return pathBuilder_;
    }

    private com.github.edarke.mongodb.driver.FuzzyOption fuzzy_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.edarke.mongodb.driver.FuzzyOption, com.github.edarke.mongodb.driver.FuzzyOption.Builder, com.github.edarke.mongodb.driver.FuzzyOptionOrBuilder> fuzzyBuilder_;
    /**
     * <code>optional .com.github.edarke.mongodb.FuzzyOption fuzzy = 3;</code>
     * @return Whether the fuzzy field is set.
     */
    public boolean hasFuzzy() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .com.github.edarke.mongodb.FuzzyOption fuzzy = 3;</code>
     * @return The fuzzy.
     */
    public com.github.edarke.mongodb.driver.FuzzyOption getFuzzy() {
      if (fuzzyBuilder_ == null) {
        return fuzzy_ == null ? com.github.edarke.mongodb.driver.FuzzyOption.getDefaultInstance() : fuzzy_;
      } else {
        return fuzzyBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .com.github.edarke.mongodb.FuzzyOption fuzzy = 3;</code>
     */
    public Builder setFuzzy(com.github.edarke.mongodb.driver.FuzzyOption value) {
      if (fuzzyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        fuzzy_ = value;
      } else {
        fuzzyBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>optional .com.github.edarke.mongodb.FuzzyOption fuzzy = 3;</code>
     */
    public Builder setFuzzy(
        com.github.edarke.mongodb.driver.FuzzyOption.Builder builderForValue) {
      if (fuzzyBuilder_ == null) {
        fuzzy_ = builderForValue.build();
      } else {
        fuzzyBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>optional .com.github.edarke.mongodb.FuzzyOption fuzzy = 3;</code>
     */
    public Builder mergeFuzzy(com.github.edarke.mongodb.driver.FuzzyOption value) {
      if (fuzzyBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          fuzzy_ != null &&
          fuzzy_ != com.github.edarke.mongodb.driver.FuzzyOption.getDefaultInstance()) {
          getFuzzyBuilder().mergeFrom(value);
        } else {
          fuzzy_ = value;
        }
      } else {
        fuzzyBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>optional .com.github.edarke.mongodb.FuzzyOption fuzzy = 3;</code>
     */
    public Builder clearFuzzy() {
      bitField0_ = (bitField0_ & ~0x00000004);
      fuzzy_ = null;
      if (fuzzyBuilder_ != null) {
        fuzzyBuilder_.dispose();
        fuzzyBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>optional .com.github.edarke.mongodb.FuzzyOption fuzzy = 3;</code>
     */
    public com.github.edarke.mongodb.driver.FuzzyOption.Builder getFuzzyBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getFuzzyFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .com.github.edarke.mongodb.FuzzyOption fuzzy = 3;</code>
     */
    public com.github.edarke.mongodb.driver.FuzzyOptionOrBuilder getFuzzyOrBuilder() {
      if (fuzzyBuilder_ != null) {
        return fuzzyBuilder_.getMessageOrBuilder();
      } else {
        return fuzzy_ == null ?
            com.github.edarke.mongodb.driver.FuzzyOption.getDefaultInstance() : fuzzy_;
      }
    }
    /**
     * <code>optional .com.github.edarke.mongodb.FuzzyOption fuzzy = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.edarke.mongodb.driver.FuzzyOption, com.github.edarke.mongodb.driver.FuzzyOption.Builder, com.github.edarke.mongodb.driver.FuzzyOptionOrBuilder> 
        getFuzzyFieldBuilder() {
      if (fuzzyBuilder_ == null) {
        fuzzyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.edarke.mongodb.driver.FuzzyOption, com.github.edarke.mongodb.driver.FuzzyOption.Builder, com.github.edarke.mongodb.driver.FuzzyOptionOrBuilder>(
                getFuzzy(),
                getParentForChildren(),
                isClean());
        fuzzy_ = null;
      }
      return fuzzyBuilder_;
    }

    private com.github.edarke.mongodb.driver.Score score_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.edarke.mongodb.driver.Score, com.github.edarke.mongodb.driver.Score.Builder, com.github.edarke.mongodb.driver.ScoreOrBuilder> scoreBuilder_;
    /**
     * <code>optional .com.github.edarke.mongodb.Score score = 4;</code>
     * @return Whether the score field is set.
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .com.github.edarke.mongodb.Score score = 4;</code>
     * @return The score.
     */
    public com.github.edarke.mongodb.driver.Score getScore() {
      if (scoreBuilder_ == null) {
        return score_ == null ? com.github.edarke.mongodb.driver.Score.getDefaultInstance() : score_;
      } else {
        return scoreBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .com.github.edarke.mongodb.Score score = 4;</code>
     */
    public Builder setScore(com.github.edarke.mongodb.driver.Score value) {
      if (scoreBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        score_ = value;
      } else {
        scoreBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>optional .com.github.edarke.mongodb.Score score = 4;</code>
     */
    public Builder setScore(
        com.github.edarke.mongodb.driver.Score.Builder builderForValue) {
      if (scoreBuilder_ == null) {
        score_ = builderForValue.build();
      } else {
        scoreBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>optional .com.github.edarke.mongodb.Score score = 4;</code>
     */
    public Builder mergeScore(com.github.edarke.mongodb.driver.Score value) {
      if (scoreBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          score_ != null &&
          score_ != com.github.edarke.mongodb.driver.Score.getDefaultInstance()) {
          getScoreBuilder().mergeFrom(value);
        } else {
          score_ = value;
        }
      } else {
        scoreBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>optional .com.github.edarke.mongodb.Score score = 4;</code>
     */
    public Builder clearScore() {
      bitField0_ = (bitField0_ & ~0x00000008);
      score_ = null;
      if (scoreBuilder_ != null) {
        scoreBuilder_.dispose();
        scoreBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>optional .com.github.edarke.mongodb.Score score = 4;</code>
     */
    public com.github.edarke.mongodb.driver.Score.Builder getScoreBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getScoreFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .com.github.edarke.mongodb.Score score = 4;</code>
     */
    public com.github.edarke.mongodb.driver.ScoreOrBuilder getScoreOrBuilder() {
      if (scoreBuilder_ != null) {
        return scoreBuilder_.getMessageOrBuilder();
      } else {
        return score_ == null ?
            com.github.edarke.mongodb.driver.Score.getDefaultInstance() : score_;
      }
    }
    /**
     * <code>optional .com.github.edarke.mongodb.Score score = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.edarke.mongodb.driver.Score, com.github.edarke.mongodb.driver.Score.Builder, com.github.edarke.mongodb.driver.ScoreOrBuilder> 
        getScoreFieldBuilder() {
      if (scoreBuilder_ == null) {
        scoreBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.edarke.mongodb.driver.Score, com.github.edarke.mongodb.driver.Score.Builder, com.github.edarke.mongodb.driver.ScoreOrBuilder>(
                getScore(),
                getParentForChildren(),
                isClean());
        score_ = null;
      }
      return scoreBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.github.edarke.mongodb.Text)
  }

  // @@protoc_insertion_point(class_scope:com.github.edarke.mongodb.Text)
  private static final com.github.edarke.mongodb.driver.Text DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.edarke.mongodb.driver.Text();
  }

  public static com.github.edarke.mongodb.driver.Text getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<Text>
      PARSER = new com.google.protobuf.AbstractParser<Text>() {
    @java.lang.Override
    public Text parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Text> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Text> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.edarke.mongodb.driver.Text getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

