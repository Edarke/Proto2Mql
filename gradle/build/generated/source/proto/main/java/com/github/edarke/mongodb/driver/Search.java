// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: search.proto

package com.github.edarke.mongodb.driver;

/**
 * Protobuf type {@code com.github.edarke.mongodb.Search}
 */
public final class Search extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.github.edarke.mongodb.Search)
    SearchOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Search.newBuilder() to construct.
  private Search(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Search() {
    index_ = "";
    sortBetaV1_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Search();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.edarke.mongodb.driver.SearchOuterClass.internal_static_com_github_edarke_mongodb_Search_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.edarke.mongodb.driver.SearchOuterClass.internal_static_com_github_edarke_mongodb_Search_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.edarke.mongodb.driver.Search.class, com.github.edarke.mongodb.driver.Search.Builder.class);
  }

  private int bitField0_;
  private int operatorCase_ = 0;
  private java.lang.Object operator_;
  public enum OperatorCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    TEXT(7),
    OPERATOR_NOT_SET(0);
    private final int value;
    private OperatorCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OperatorCase valueOf(int value) {
      return forNumber(value);
    }

    public static OperatorCase forNumber(int value) {
      switch (value) {
        case 7: return TEXT;
        case 0: return OPERATOR_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public OperatorCase
  getOperatorCase() {
    return OperatorCase.forNumber(
        operatorCase_);
  }

  public static final int INDEX_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object index_ = "";
  /**
   * <code>optional string index = 1;</code>
   * @return Whether the index field is set.
   */
  @java.lang.Override
  public boolean hasIndex() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional string index = 1;</code>
   * @return The index.
   */
  @java.lang.Override
  public java.lang.String getIndex() {
    java.lang.Object ref = index_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        index_ = s;
      }
      return s;
    }
  }
  /**
   * <code>optional string index = 1;</code>
   * @return The bytes for index.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIndexBytes() {
    java.lang.Object ref = index_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      index_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COUNT_FIELD_NUMBER = 2;
  private com.github.edarke.mongodb.driver.Count count_;
  /**
   * <code>optional .com.github.edarke.mongodb.Count count = 2;</code>
   * @return Whether the count field is set.
   */
  @java.lang.Override
  public boolean hasCount() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional .com.github.edarke.mongodb.Count count = 2;</code>
   * @return The count.
   */
  @java.lang.Override
  public com.github.edarke.mongodb.driver.Count getCount() {
    return count_ == null ? com.github.edarke.mongodb.driver.Count.getDefaultInstance() : count_;
  }
  /**
   * <code>optional .com.github.edarke.mongodb.Count count = 2;</code>
   */
  @java.lang.Override
  public com.github.edarke.mongodb.driver.CountOrBuilder getCountOrBuilder() {
    return count_ == null ? com.github.edarke.mongodb.driver.Count.getDefaultInstance() : count_;
  }

  public static final int RETURN_STORED_SOURCE_FIELD_NUMBER = 4;
  private boolean returnStoredSource_ = false;
  /**
   * <code>optional bool return_stored_source = 4;</code>
   * @return Whether the returnStoredSource field is set.
   */
  @java.lang.Override
  public boolean hasReturnStoredSource() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>optional bool return_stored_source = 4;</code>
   * @return The returnStoredSource.
   */
  @java.lang.Override
  public boolean getReturnStoredSource() {
    return returnStoredSource_;
  }

  public static final int SCORE_DETAILS_FIELD_NUMBER = 5;
  private boolean scoreDetails_ = false;
  /**
   * <code>optional bool score_details = 5;</code>
   * @return Whether the scoreDetails field is set.
   */
  @java.lang.Override
  public boolean hasScoreDetails() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>optional bool score_details = 5;</code>
   * @return The scoreDetails.
   */
  @java.lang.Override
  public boolean getScoreDetails() {
    return scoreDetails_;
  }

  public static final int TEXT_FIELD_NUMBER = 7;
  /**
   * <code>.com.github.edarke.mongodb.Text text = 7;</code>
   * @return Whether the text field is set.
   */
  @java.lang.Override
  public boolean hasText() {
    return operatorCase_ == 7;
  }
  /**
   * <code>.com.github.edarke.mongodb.Text text = 7;</code>
   * @return The text.
   */
  @java.lang.Override
  public com.github.edarke.mongodb.driver.Text getText() {
    if (operatorCase_ == 7) {
       return (com.github.edarke.mongodb.driver.Text) operator_;
    }
    return com.github.edarke.mongodb.driver.Text.getDefaultInstance();
  }
  /**
   * <code>.com.github.edarke.mongodb.Text text = 7;</code>
   */
  @java.lang.Override
  public com.github.edarke.mongodb.driver.TextOrBuilder getTextOrBuilder() {
    if (operatorCase_ == 7) {
       return (com.github.edarke.mongodb.driver.Text) operator_;
    }
    return com.github.edarke.mongodb.driver.Text.getDefaultInstance();
  }

  public static final int SORT_BETA_V1_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private java.util.List<com.github.edarke.mongodb.driver.SortField> sortBetaV1_;
  /**
   * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
   */
  @java.lang.Override
  public java.util.List<com.github.edarke.mongodb.driver.SortField> getSortBetaV1List() {
    return sortBetaV1_;
  }
  /**
   * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.github.edarke.mongodb.driver.SortFieldOrBuilder> 
      getSortBetaV1OrBuilderList() {
    return sortBetaV1_;
  }
  /**
   * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
   */
  @java.lang.Override
  public int getSortBetaV1Count() {
    return sortBetaV1_.size();
  }
  /**
   * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
   */
  @java.lang.Override
  public com.github.edarke.mongodb.driver.SortField getSortBetaV1(int index) {
    return sortBetaV1_.get(index);
  }
  /**
   * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
   */
  @java.lang.Override
  public com.github.edarke.mongodb.driver.SortFieldOrBuilder getSortBetaV1OrBuilder(
      int index) {
    return sortBetaV1_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (hasText()) {
      if (!getText().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getSortBetaV1Count(); i++) {
      if (!getSortBetaV1(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, index_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getCount());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeBool(4, returnStoredSource_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeBool(5, scoreDetails_);
    }
    for (int i = 0; i < sortBetaV1_.size(); i++) {
      output.writeMessage(6, sortBetaV1_.get(i));
    }
    if (operatorCase_ == 7) {
      output.writeMessage(7, (com.github.edarke.mongodb.driver.Text) operator_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, index_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getCount());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, returnStoredSource_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, scoreDetails_);
    }
    for (int i = 0; i < sortBetaV1_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, sortBetaV1_.get(i));
    }
    if (operatorCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, (com.github.edarke.mongodb.driver.Text) operator_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.edarke.mongodb.driver.Search)) {
      return super.equals(obj);
    }
    com.github.edarke.mongodb.driver.Search other = (com.github.edarke.mongodb.driver.Search) obj;

    if (hasIndex() != other.hasIndex()) return false;
    if (hasIndex()) {
      if (!getIndex()
          .equals(other.getIndex())) return false;
    }
    if (hasCount() != other.hasCount()) return false;
    if (hasCount()) {
      if (!getCount()
          .equals(other.getCount())) return false;
    }
    if (hasReturnStoredSource() != other.hasReturnStoredSource()) return false;
    if (hasReturnStoredSource()) {
      if (getReturnStoredSource()
          != other.getReturnStoredSource()) return false;
    }
    if (hasScoreDetails() != other.hasScoreDetails()) return false;
    if (hasScoreDetails()) {
      if (getScoreDetails()
          != other.getScoreDetails()) return false;
    }
    if (!getSortBetaV1List()
        .equals(other.getSortBetaV1List())) return false;
    if (!getOperatorCase().equals(other.getOperatorCase())) return false;
    switch (operatorCase_) {
      case 7:
        if (!getText()
            .equals(other.getText())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasIndex()) {
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex().hashCode();
    }
    if (hasCount()) {
      hash = (37 * hash) + COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getCount().hashCode();
    }
    if (hasReturnStoredSource()) {
      hash = (37 * hash) + RETURN_STORED_SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getReturnStoredSource());
    }
    if (hasScoreDetails()) {
      hash = (37 * hash) + SCORE_DETAILS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getScoreDetails());
    }
    if (getSortBetaV1Count() > 0) {
      hash = (37 * hash) + SORT_BETA_V1_FIELD_NUMBER;
      hash = (53 * hash) + getSortBetaV1List().hashCode();
    }
    switch (operatorCase_) {
      case 7:
        hash = (37 * hash) + TEXT_FIELD_NUMBER;
        hash = (53 * hash) + getText().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.edarke.mongodb.driver.Search parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.edarke.mongodb.driver.Search parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.edarke.mongodb.driver.Search parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.edarke.mongodb.driver.Search parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.edarke.mongodb.driver.Search parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.edarke.mongodb.driver.Search parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.edarke.mongodb.driver.Search parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.edarke.mongodb.driver.Search parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.edarke.mongodb.driver.Search parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.github.edarke.mongodb.driver.Search parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.edarke.mongodb.driver.Search parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.edarke.mongodb.driver.Search parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.edarke.mongodb.driver.Search prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.github.edarke.mongodb.Search}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.github.edarke.mongodb.Search)
      com.github.edarke.mongodb.driver.SearchOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.edarke.mongodb.driver.SearchOuterClass.internal_static_com_github_edarke_mongodb_Search_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.edarke.mongodb.driver.SearchOuterClass.internal_static_com_github_edarke_mongodb_Search_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.edarke.mongodb.driver.Search.class, com.github.edarke.mongodb.driver.Search.Builder.class);
    }

    // Construct using com.github.edarke.mongodb.driver.Search.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getCountFieldBuilder();
        getSortBetaV1FieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      index_ = "";
      count_ = null;
      if (countBuilder_ != null) {
        countBuilder_.dispose();
        countBuilder_ = null;
      }
      returnStoredSource_ = false;
      scoreDetails_ = false;
      if (textBuilder_ != null) {
        textBuilder_.clear();
      }
      if (sortBetaV1Builder_ == null) {
        sortBetaV1_ = java.util.Collections.emptyList();
      } else {
        sortBetaV1_ = null;
        sortBetaV1Builder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      operatorCase_ = 0;
      operator_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.edarke.mongodb.driver.SearchOuterClass.internal_static_com_github_edarke_mongodb_Search_descriptor;
    }

    @java.lang.Override
    public com.github.edarke.mongodb.driver.Search getDefaultInstanceForType() {
      return com.github.edarke.mongodb.driver.Search.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.edarke.mongodb.driver.Search build() {
      com.github.edarke.mongodb.driver.Search result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.edarke.mongodb.driver.Search buildPartial() {
      com.github.edarke.mongodb.driver.Search result = new com.github.edarke.mongodb.driver.Search(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.github.edarke.mongodb.driver.Search result) {
      if (sortBetaV1Builder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          sortBetaV1_ = java.util.Collections.unmodifiableList(sortBetaV1_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.sortBetaV1_ = sortBetaV1_;
      } else {
        result.sortBetaV1_ = sortBetaV1Builder_.build();
      }
    }

    private void buildPartial0(com.github.edarke.mongodb.driver.Search result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.index_ = index_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.count_ = countBuilder_ == null
            ? count_
            : countBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.returnStoredSource_ = returnStoredSource_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.scoreDetails_ = scoreDetails_;
        to_bitField0_ |= 0x00000008;
      }
      result.bitField0_ |= to_bitField0_;
    }

    private void buildPartialOneofs(com.github.edarke.mongodb.driver.Search result) {
      result.operatorCase_ = operatorCase_;
      result.operator_ = this.operator_;
      if (operatorCase_ == 7 &&
          textBuilder_ != null) {
        result.operator_ = textBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.edarke.mongodb.driver.Search) {
        return mergeFrom((com.github.edarke.mongodb.driver.Search)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.edarke.mongodb.driver.Search other) {
      if (other == com.github.edarke.mongodb.driver.Search.getDefaultInstance()) return this;
      if (other.hasIndex()) {
        index_ = other.index_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasCount()) {
        mergeCount(other.getCount());
      }
      if (other.hasReturnStoredSource()) {
        setReturnStoredSource(other.getReturnStoredSource());
      }
      if (other.hasScoreDetails()) {
        setScoreDetails(other.getScoreDetails());
      }
      if (sortBetaV1Builder_ == null) {
        if (!other.sortBetaV1_.isEmpty()) {
          if (sortBetaV1_.isEmpty()) {
            sortBetaV1_ = other.sortBetaV1_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureSortBetaV1IsMutable();
            sortBetaV1_.addAll(other.sortBetaV1_);
          }
          onChanged();
        }
      } else {
        if (!other.sortBetaV1_.isEmpty()) {
          if (sortBetaV1Builder_.isEmpty()) {
            sortBetaV1Builder_.dispose();
            sortBetaV1Builder_ = null;
            sortBetaV1_ = other.sortBetaV1_;
            bitField0_ = (bitField0_ & ~0x00000020);
            sortBetaV1Builder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSortBetaV1FieldBuilder() : null;
          } else {
            sortBetaV1Builder_.addAllMessages(other.sortBetaV1_);
          }
        }
      }
      switch (other.getOperatorCase()) {
        case TEXT: {
          mergeText(other.getText());
          break;
        }
        case OPERATOR_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      if (hasText()) {
        if (!getText().isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getSortBetaV1Count(); i++) {
        if (!getSortBetaV1(i).isInitialized()) {
          return false;
        }
      }
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              index_ = input.readBytes();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getCountFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 32: {
              returnStoredSource_ = input.readBool();
              bitField0_ |= 0x00000004;
              break;
            } // case 32
            case 40: {
              scoreDetails_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 40
            case 50: {
              com.github.edarke.mongodb.driver.SortField m =
                  input.readMessage(
                      com.github.edarke.mongodb.driver.SortField.PARSER,
                      extensionRegistry);
              if (sortBetaV1Builder_ == null) {
                ensureSortBetaV1IsMutable();
                sortBetaV1_.add(m);
              } else {
                sortBetaV1Builder_.addMessage(m);
              }
              break;
            } // case 50
            case 58: {
              input.readMessage(
                  getTextFieldBuilder().getBuilder(),
                  extensionRegistry);
              operatorCase_ = 7;
              break;
            } // case 58
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int operatorCase_ = 0;
    private java.lang.Object operator_;
    public OperatorCase
        getOperatorCase() {
      return OperatorCase.forNumber(
          operatorCase_);
    }

    public Builder clearOperator() {
      operatorCase_ = 0;
      operator_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object index_ = "";
    /**
     * <code>optional string index = 1;</code>
     * @return Whether the index field is set.
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string index = 1;</code>
     * @return The index.
     */
    public java.lang.String getIndex() {
      java.lang.Object ref = index_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          index_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string index = 1;</code>
     * @return The bytes for index.
     */
    public com.google.protobuf.ByteString
        getIndexBytes() {
      java.lang.Object ref = index_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        index_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string index = 1;</code>
     * @param value The index to set.
     * @return This builder for chaining.
     */
    public Builder setIndex(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      index_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>optional string index = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearIndex() {
      index_ = getDefaultInstance().getIndex();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>optional string index = 1;</code>
     * @param value The bytes for index to set.
     * @return This builder for chaining.
     */
    public Builder setIndexBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      index_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.github.edarke.mongodb.driver.Count count_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.edarke.mongodb.driver.Count, com.github.edarke.mongodb.driver.Count.Builder, com.github.edarke.mongodb.driver.CountOrBuilder> countBuilder_;
    /**
     * <code>optional .com.github.edarke.mongodb.Count count = 2;</code>
     * @return Whether the count field is set.
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .com.github.edarke.mongodb.Count count = 2;</code>
     * @return The count.
     */
    public com.github.edarke.mongodb.driver.Count getCount() {
      if (countBuilder_ == null) {
        return count_ == null ? com.github.edarke.mongodb.driver.Count.getDefaultInstance() : count_;
      } else {
        return countBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .com.github.edarke.mongodb.Count count = 2;</code>
     */
    public Builder setCount(com.github.edarke.mongodb.driver.Count value) {
      if (countBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        count_ = value;
      } else {
        countBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>optional .com.github.edarke.mongodb.Count count = 2;</code>
     */
    public Builder setCount(
        com.github.edarke.mongodb.driver.Count.Builder builderForValue) {
      if (countBuilder_ == null) {
        count_ = builderForValue.build();
      } else {
        countBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>optional .com.github.edarke.mongodb.Count count = 2;</code>
     */
    public Builder mergeCount(com.github.edarke.mongodb.driver.Count value) {
      if (countBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          count_ != null &&
          count_ != com.github.edarke.mongodb.driver.Count.getDefaultInstance()) {
          getCountBuilder().mergeFrom(value);
        } else {
          count_ = value;
        }
      } else {
        countBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>optional .com.github.edarke.mongodb.Count count = 2;</code>
     */
    public Builder clearCount() {
      bitField0_ = (bitField0_ & ~0x00000002);
      count_ = null;
      if (countBuilder_ != null) {
        countBuilder_.dispose();
        countBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>optional .com.github.edarke.mongodb.Count count = 2;</code>
     */
    public com.github.edarke.mongodb.driver.Count.Builder getCountBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getCountFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .com.github.edarke.mongodb.Count count = 2;</code>
     */
    public com.github.edarke.mongodb.driver.CountOrBuilder getCountOrBuilder() {
      if (countBuilder_ != null) {
        return countBuilder_.getMessageOrBuilder();
      } else {
        return count_ == null ?
            com.github.edarke.mongodb.driver.Count.getDefaultInstance() : count_;
      }
    }
    /**
     * <code>optional .com.github.edarke.mongodb.Count count = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.edarke.mongodb.driver.Count, com.github.edarke.mongodb.driver.Count.Builder, com.github.edarke.mongodb.driver.CountOrBuilder> 
        getCountFieldBuilder() {
      if (countBuilder_ == null) {
        countBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.edarke.mongodb.driver.Count, com.github.edarke.mongodb.driver.Count.Builder, com.github.edarke.mongodb.driver.CountOrBuilder>(
                getCount(),
                getParentForChildren(),
                isClean());
        count_ = null;
      }
      return countBuilder_;
    }

    private boolean returnStoredSource_ ;
    /**
     * <code>optional bool return_stored_source = 4;</code>
     * @return Whether the returnStoredSource field is set.
     */
    @java.lang.Override
    public boolean hasReturnStoredSource() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional bool return_stored_source = 4;</code>
     * @return The returnStoredSource.
     */
    @java.lang.Override
    public boolean getReturnStoredSource() {
      return returnStoredSource_;
    }
    /**
     * <code>optional bool return_stored_source = 4;</code>
     * @param value The returnStoredSource to set.
     * @return This builder for chaining.
     */
    public Builder setReturnStoredSource(boolean value) {
      
      returnStoredSource_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool return_stored_source = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearReturnStoredSource() {
      bitField0_ = (bitField0_ & ~0x00000004);
      returnStoredSource_ = false;
      onChanged();
      return this;
    }

    private boolean scoreDetails_ ;
    /**
     * <code>optional bool score_details = 5;</code>
     * @return Whether the scoreDetails field is set.
     */
    @java.lang.Override
    public boolean hasScoreDetails() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bool score_details = 5;</code>
     * @return The scoreDetails.
     */
    @java.lang.Override
    public boolean getScoreDetails() {
      return scoreDetails_;
    }
    /**
     * <code>optional bool score_details = 5;</code>
     * @param value The scoreDetails to set.
     * @return This builder for chaining.
     */
    public Builder setScoreDetails(boolean value) {
      
      scoreDetails_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool score_details = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearScoreDetails() {
      bitField0_ = (bitField0_ & ~0x00000008);
      scoreDetails_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.edarke.mongodb.driver.Text, com.github.edarke.mongodb.driver.Text.Builder, com.github.edarke.mongodb.driver.TextOrBuilder> textBuilder_;
    /**
     * <code>.com.github.edarke.mongodb.Text text = 7;</code>
     * @return Whether the text field is set.
     */
    @java.lang.Override
    public boolean hasText() {
      return operatorCase_ == 7;
    }
    /**
     * <code>.com.github.edarke.mongodb.Text text = 7;</code>
     * @return The text.
     */
    @java.lang.Override
    public com.github.edarke.mongodb.driver.Text getText() {
      if (textBuilder_ == null) {
        if (operatorCase_ == 7) {
          return (com.github.edarke.mongodb.driver.Text) operator_;
        }
        return com.github.edarke.mongodb.driver.Text.getDefaultInstance();
      } else {
        if (operatorCase_ == 7) {
          return textBuilder_.getMessage();
        }
        return com.github.edarke.mongodb.driver.Text.getDefaultInstance();
      }
    }
    /**
     * <code>.com.github.edarke.mongodb.Text text = 7;</code>
     */
    public Builder setText(com.github.edarke.mongodb.driver.Text value) {
      if (textBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        operator_ = value;
        onChanged();
      } else {
        textBuilder_.setMessage(value);
      }
      operatorCase_ = 7;
      return this;
    }
    /**
     * <code>.com.github.edarke.mongodb.Text text = 7;</code>
     */
    public Builder setText(
        com.github.edarke.mongodb.driver.Text.Builder builderForValue) {
      if (textBuilder_ == null) {
        operator_ = builderForValue.build();
        onChanged();
      } else {
        textBuilder_.setMessage(builderForValue.build());
      }
      operatorCase_ = 7;
      return this;
    }
    /**
     * <code>.com.github.edarke.mongodb.Text text = 7;</code>
     */
    public Builder mergeText(com.github.edarke.mongodb.driver.Text value) {
      if (textBuilder_ == null) {
        if (operatorCase_ == 7 &&
            operator_ != com.github.edarke.mongodb.driver.Text.getDefaultInstance()) {
          operator_ = com.github.edarke.mongodb.driver.Text.newBuilder((com.github.edarke.mongodb.driver.Text) operator_)
              .mergeFrom(value).buildPartial();
        } else {
          operator_ = value;
        }
        onChanged();
      } else {
        if (operatorCase_ == 7) {
          textBuilder_.mergeFrom(value);
        } else {
          textBuilder_.setMessage(value);
        }
      }
      operatorCase_ = 7;
      return this;
    }
    /**
     * <code>.com.github.edarke.mongodb.Text text = 7;</code>
     */
    public Builder clearText() {
      if (textBuilder_ == null) {
        if (operatorCase_ == 7) {
          operatorCase_ = 0;
          operator_ = null;
          onChanged();
        }
      } else {
        if (operatorCase_ == 7) {
          operatorCase_ = 0;
          operator_ = null;
        }
        textBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.com.github.edarke.mongodb.Text text = 7;</code>
     */
    public com.github.edarke.mongodb.driver.Text.Builder getTextBuilder() {
      return getTextFieldBuilder().getBuilder();
    }
    /**
     * <code>.com.github.edarke.mongodb.Text text = 7;</code>
     */
    @java.lang.Override
    public com.github.edarke.mongodb.driver.TextOrBuilder getTextOrBuilder() {
      if ((operatorCase_ == 7) && (textBuilder_ != null)) {
        return textBuilder_.getMessageOrBuilder();
      } else {
        if (operatorCase_ == 7) {
          return (com.github.edarke.mongodb.driver.Text) operator_;
        }
        return com.github.edarke.mongodb.driver.Text.getDefaultInstance();
      }
    }
    /**
     * <code>.com.github.edarke.mongodb.Text text = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.edarke.mongodb.driver.Text, com.github.edarke.mongodb.driver.Text.Builder, com.github.edarke.mongodb.driver.TextOrBuilder> 
        getTextFieldBuilder() {
      if (textBuilder_ == null) {
        if (!(operatorCase_ == 7)) {
          operator_ = com.github.edarke.mongodb.driver.Text.getDefaultInstance();
        }
        textBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.edarke.mongodb.driver.Text, com.github.edarke.mongodb.driver.Text.Builder, com.github.edarke.mongodb.driver.TextOrBuilder>(
                (com.github.edarke.mongodb.driver.Text) operator_,
                getParentForChildren(),
                isClean());
        operator_ = null;
      }
      operatorCase_ = 7;
      onChanged();
      return textBuilder_;
    }

    private java.util.List<com.github.edarke.mongodb.driver.SortField> sortBetaV1_ =
      java.util.Collections.emptyList();
    private void ensureSortBetaV1IsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        sortBetaV1_ = new java.util.ArrayList<com.github.edarke.mongodb.driver.SortField>(sortBetaV1_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.edarke.mongodb.driver.SortField, com.github.edarke.mongodb.driver.SortField.Builder, com.github.edarke.mongodb.driver.SortFieldOrBuilder> sortBetaV1Builder_;

    /**
     * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
     */
    public java.util.List<com.github.edarke.mongodb.driver.SortField> getSortBetaV1List() {
      if (sortBetaV1Builder_ == null) {
        return java.util.Collections.unmodifiableList(sortBetaV1_);
      } else {
        return sortBetaV1Builder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
     */
    public int getSortBetaV1Count() {
      if (sortBetaV1Builder_ == null) {
        return sortBetaV1_.size();
      } else {
        return sortBetaV1Builder_.getCount();
      }
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
     */
    public com.github.edarke.mongodb.driver.SortField getSortBetaV1(int index) {
      if (sortBetaV1Builder_ == null) {
        return sortBetaV1_.get(index);
      } else {
        return sortBetaV1Builder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
     */
    public Builder setSortBetaV1(
        int index, com.github.edarke.mongodb.driver.SortField value) {
      if (sortBetaV1Builder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSortBetaV1IsMutable();
        sortBetaV1_.set(index, value);
        onChanged();
      } else {
        sortBetaV1Builder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
     */
    public Builder setSortBetaV1(
        int index, com.github.edarke.mongodb.driver.SortField.Builder builderForValue) {
      if (sortBetaV1Builder_ == null) {
        ensureSortBetaV1IsMutable();
        sortBetaV1_.set(index, builderForValue.build());
        onChanged();
      } else {
        sortBetaV1Builder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
     */
    public Builder addSortBetaV1(com.github.edarke.mongodb.driver.SortField value) {
      if (sortBetaV1Builder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSortBetaV1IsMutable();
        sortBetaV1_.add(value);
        onChanged();
      } else {
        sortBetaV1Builder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
     */
    public Builder addSortBetaV1(
        int index, com.github.edarke.mongodb.driver.SortField value) {
      if (sortBetaV1Builder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSortBetaV1IsMutable();
        sortBetaV1_.add(index, value);
        onChanged();
      } else {
        sortBetaV1Builder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
     */
    public Builder addSortBetaV1(
        com.github.edarke.mongodb.driver.SortField.Builder builderForValue) {
      if (sortBetaV1Builder_ == null) {
        ensureSortBetaV1IsMutable();
        sortBetaV1_.add(builderForValue.build());
        onChanged();
      } else {
        sortBetaV1Builder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
     */
    public Builder addSortBetaV1(
        int index, com.github.edarke.mongodb.driver.SortField.Builder builderForValue) {
      if (sortBetaV1Builder_ == null) {
        ensureSortBetaV1IsMutable();
        sortBetaV1_.add(index, builderForValue.build());
        onChanged();
      } else {
        sortBetaV1Builder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
     */
    public Builder addAllSortBetaV1(
        java.lang.Iterable<? extends com.github.edarke.mongodb.driver.SortField> values) {
      if (sortBetaV1Builder_ == null) {
        ensureSortBetaV1IsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sortBetaV1_);
        onChanged();
      } else {
        sortBetaV1Builder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
     */
    public Builder clearSortBetaV1() {
      if (sortBetaV1Builder_ == null) {
        sortBetaV1_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        sortBetaV1Builder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
     */
    public Builder removeSortBetaV1(int index) {
      if (sortBetaV1Builder_ == null) {
        ensureSortBetaV1IsMutable();
        sortBetaV1_.remove(index);
        onChanged();
      } else {
        sortBetaV1Builder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
     */
    public com.github.edarke.mongodb.driver.SortField.Builder getSortBetaV1Builder(
        int index) {
      return getSortBetaV1FieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
     */
    public com.github.edarke.mongodb.driver.SortFieldOrBuilder getSortBetaV1OrBuilder(
        int index) {
      if (sortBetaV1Builder_ == null) {
        return sortBetaV1_.get(index);  } else {
        return sortBetaV1Builder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
     */
    public java.util.List<? extends com.github.edarke.mongodb.driver.SortFieldOrBuilder> 
         getSortBetaV1OrBuilderList() {
      if (sortBetaV1Builder_ != null) {
        return sortBetaV1Builder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(sortBetaV1_);
      }
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
     */
    public com.github.edarke.mongodb.driver.SortField.Builder addSortBetaV1Builder() {
      return getSortBetaV1FieldBuilder().addBuilder(
          com.github.edarke.mongodb.driver.SortField.getDefaultInstance());
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
     */
    public com.github.edarke.mongodb.driver.SortField.Builder addSortBetaV1Builder(
        int index) {
      return getSortBetaV1FieldBuilder().addBuilder(
          index, com.github.edarke.mongodb.driver.SortField.getDefaultInstance());
    }
    /**
     * <code>repeated .com.github.edarke.mongodb.SortField sort_beta_v1 = 6 [(.com.github.edarke.mongodb.Options.map_field) = true];</code>
     */
    public java.util.List<com.github.edarke.mongodb.driver.SortField.Builder> 
         getSortBetaV1BuilderList() {
      return getSortBetaV1FieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.edarke.mongodb.driver.SortField, com.github.edarke.mongodb.driver.SortField.Builder, com.github.edarke.mongodb.driver.SortFieldOrBuilder> 
        getSortBetaV1FieldBuilder() {
      if (sortBetaV1Builder_ == null) {
        sortBetaV1Builder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.github.edarke.mongodb.driver.SortField, com.github.edarke.mongodb.driver.SortField.Builder, com.github.edarke.mongodb.driver.SortFieldOrBuilder>(
                sortBetaV1_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        sortBetaV1_ = null;
      }
      return sortBetaV1Builder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.github.edarke.mongodb.Search)
  }

  // @@protoc_insertion_point(class_scope:com.github.edarke.mongodb.Search)
  private static final com.github.edarke.mongodb.driver.Search DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.edarke.mongodb.driver.Search();
  }

  public static com.github.edarke.mongodb.driver.Search getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<Search>
      PARSER = new com.google.protobuf.AbstractParser<Search>() {
    @java.lang.Override
    public Search parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Search> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Search> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.edarke.mongodb.driver.Search getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

